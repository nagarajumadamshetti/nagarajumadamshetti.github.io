{"version":3,"file":"static/js/18.b5a0ba0e.chunk.js","mappings":"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","sources":["components/Resume/Education/Degree.js","components/Resume/Education.js","components/Resume/Experience/Job.js","components/Resume/Experience.js","components/Resume/Skills/CategoryButton.js","components/Resume/Skills/SkillBar.js","components/Resume/Skills.js","components/Resume/Courses/Course.js","components/Resume/Courses.js","components/Resume/References.js","data/resume/courses.js","data/resume/degrees.js","data/resume/work.js","data/resume/skills.js","pages/Resume.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Degree = ({ data }) => (\r\n  <article className=\"degree-container\">\r\n    <header>\r\n      <h4 className=\"degree\">{data.degree}</h4>\r\n      <p className=\"school\"><a href={data.link}>{data.school}</a>, {data.year}</p>\r\n    </header>\r\n  </article>\r\n);\r\n\r\nDegree.propTypes = {\r\n  data: PropTypes.shape({\r\n    degree: PropTypes.string.isRequired,\r\n    link: PropTypes.string.isRequired,\r\n    school: PropTypes.string.isRequired,\r\n    year: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default Degree;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Degree from './Education/Degree';\r\n\r\nconst Education = ({ data }) => (\r\n  <div className=\"education\">\r\n    <div className=\"link-to\" id=\"education\" />\r\n    <div className=\"title\">\r\n      <h3>Education</h3>\r\n    </div>\r\n    {data.map((degree) => (\r\n      <Degree\r\n        data={degree}\r\n        key={degree.school}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nEducation.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    school: PropTypes.string,\r\n    degree: PropTypes.string,\r\n    link: PropTypes.string,\r\n    year: PropTypes.number,\r\n  })),\r\n};\r\n\r\nEducation.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default Education;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nimport Markdown from 'markdown-to-jsx';\r\n\r\nconst Job = ({\r\n  data: {\r\n    name, position, url, startDate, endDate, summary, highlights,\r\n  },\r\n}) => (\r\n  <article className=\"jobs-container\">\r\n    <header>\r\n      <h4><a href={url}>{name}</a> - {position}</h4>\r\n      <p className=\"daterange\"> {dayjs(startDate).format('MMMM YYYY')} - {endDate ? dayjs(endDate).format('MMMM YYYY') : 'PRESENT'}</p>\r\n    </header>\r\n    {summary ? (\r\n      <Markdown\r\n        options={{\r\n          overrides: {\r\n            p: {\r\n              props: {\r\n                className: 'summary',\r\n              },\r\n            },\r\n          },\r\n        }}\r\n      >\r\n        {summary}\r\n      </Markdown>\r\n    ) : null}\r\n    {highlights ? (\r\n      <ul className=\"points\">\r\n        {highlights.map((highlight) => (\r\n          <li key={highlight}>{highlight}</li>\r\n        ))}\r\n      </ul>\r\n    ) : null}\r\n  </article>\r\n);\r\n\r\nJob.propTypes = {\r\n  data: PropTypes.shape({\r\n    name: PropTypes.string.isRequired,\r\n    position: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    startDate: PropTypes.string.isRequired,\r\n    endDate: PropTypes.string,\r\n    summary: PropTypes.string,\r\n    highlights: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  }).isRequired,\r\n};\r\n\r\nexport default Job;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Job from './Experience/Job';\r\n\r\nconst Experience = ({ data }) => (\r\n  <div className=\"experience\">\r\n    <div className=\"link-to\" id=\"experience\" />\r\n    <div className=\"title\">\r\n      <h3>Experience</h3>\r\n    </div>\r\n    {data.map((job) => (\r\n      <Job\r\n        data={job}\r\n        key={`${job.name}-${job.position}`}\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nExperience.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.exact({\r\n    name: PropTypes.string,\r\n    position: PropTypes.string,\r\n    url: PropTypes.string,\r\n    startDate: PropTypes.string,\r\n    endDate: PropTypes.string,\r\n    highlights: PropTypes.arrayOf(PropTypes.string),\r\n    summary: PropTypes.string,\r\n  })),\r\n};\r\n\r\nExperience.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CategoryButton = ({ handleClick, active, label }) => (\r\n  <button\r\n    className={`skillbutton ${active[label] ? 'skillbutton-active' : ''}`}\r\n    type=\"button\"\r\n    onClick={() => handleClick(label)}\r\n  >\r\n    {label}\r\n  </button>\r\n);\r\n\r\nCategoryButton.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  handleClick: PropTypes.func.isRequired,\r\n  active: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,\r\n};\r\n\r\nexport default CategoryButton;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst SkillBar = ({ data, categories }) => {\r\n  const { category, competency, title } = data;\r\n\r\n  // TODO: Consider averaging colors\r\n  const titleStyle = {\r\n    background: categories\r\n      .filter((cat) => category.includes(cat.name))\r\n      .map((cat) => cat.color)[0],\r\n  };\r\n\r\n  const barStyle = {\r\n    ...titleStyle,\r\n    width: `${String(Math.min(100, Math.max((competency / 5.0) * 100.0, 0)))}%`,\r\n  };\r\n\r\n  return (\r\n    <div className=\"skillbar clearfix\">\r\n      <div className=\"skillbar-title\" style={titleStyle}><span>{title}</span></div>\r\n      <div className=\"skillbar-bar\" style={barStyle} />\r\n      <div className=\"skill-bar-percent\">{competency} / 5</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSkillBar.propTypes = {\r\n  data: PropTypes.shape({\r\n    category: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    competency: PropTypes.number.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  categories: PropTypes.arrayOf(PropTypes.shape({\r\n    name: PropTypes.string,\r\n    color: PropTypes.string,\r\n  })),\r\n};\r\n\r\nSkillBar.defaultProps = {\r\n  categories: [],\r\n};\r\n\r\nexport default SkillBar;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CategoryButton from './Skills/CategoryButton';\r\nimport SkillBar from './Skills/SkillBar';\r\n\r\nconst Skills = ({ skills, categories }) => {\r\n  const initialButtons = Object.fromEntries([['All', false]].concat(categories.map(({ name }) => [name, false])));\r\n\r\n  const [buttons, setButtons] = useState(initialButtons);\r\n\r\n  const handleChildClick = (label) => {\r\n    // Toggle button that was clicked. Turn all other buttons off.\r\n    const newButtons = Object.keys(buttons).reduce((obj, key) => ({\r\n      ...obj,\r\n      [key]: (label === key) && !buttons[key],\r\n    }), {});\r\n    // Turn on 'All' button if other buttons are off\r\n    newButtons.All = !Object.keys(buttons).some((key) => newButtons[key]);\r\n    setButtons(newButtons);\r\n  };\r\n\r\n  const getRows = () => {\r\n    // search for true active categories\r\n    const actCat = Object.keys(buttons).reduce((cat, key) => (\r\n      buttons[key] ? key : cat\r\n    ), 'All');\r\n\r\n    const comparator = (a, b) => {\r\n      let ret = 0;\r\n      if (a.competency > b.competency) ret = -1;\r\n      else if (a.competency < b.competency) ret = 1;\r\n      else if (a.category[0] > b.category[0]) ret = -1;\r\n      else if (a.category[0] < b.category[0]) ret = 1;\r\n      else if (a.title > b.title) ret = 1;\r\n      else if (a.title < b.title) ret = -1;\r\n      return ret;\r\n    };\r\n\r\n    return skills.sort(comparator).filter((skill) => (actCat === 'All' || skill.category.includes(actCat)))\r\n      .map((skill) => (\r\n        <SkillBar\r\n          categories={categories}\r\n          data={skill}\r\n          key={skill.title}\r\n        />\r\n      ));\r\n  };\r\n\r\n  const getButtons = () => Object.keys(buttons).map((key) => (\r\n    <CategoryButton\r\n      label={key}\r\n      key={key}\r\n      active={buttons}\r\n      handleClick={handleChildClick}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"skills\">\r\n      <div className=\"link-to\" id=\"skills\" />\r\n      <div className=\"title\">\r\n        <h3>Skills</h3>\r\n        {/* <p>Note: I think these sections are silly, but everyone seems to have one.\r\n          Here is a *mostly* honest overview of my skills.\r\n        </p> */}\r\n      </div>\r\n      <div className=\"skill-button-container\">\r\n        {getButtons()}\r\n      </div>\r\n      <div className=\"skill-row-container\">\r\n        {getRows()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSkills.propTypes = {\r\n  skills: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string,\r\n    competency: PropTypes.number,\r\n    category: PropTypes.arrayOf(PropTypes.string),\r\n  })),\r\n  categories: PropTypes.arrayOf(PropTypes.shape({\r\n    name: PropTypes.string,\r\n    color: PropTypes.string,\r\n  })),\r\n};\r\n\r\nSkills.defaultProps = {\r\n  skills: [],\r\n  categories: [],\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Course = ({ data, last }) => (\r\n  <li className=\"course-container\">\r\n    <a href={data.link}>\r\n      <h4 className=\"course-number\">{data.number}:</h4>\r\n      <p className=\"course-name\">{data.title}</p>\r\n    </a>\r\n    {!last && <div className=\"course-dot\"><p className=\"course-name\"> &#8226;</p></div>}\r\n  </li>\r\n);\r\n\r\nCourse.propTypes = {\r\n  data: PropTypes.shape({\r\n    link: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  last: PropTypes.bool,\r\n};\r\n\r\nCourse.defaultProps = {\r\n  last: false,\r\n};\r\n\r\nexport default Course;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Course from './Courses/Course';\r\n\r\nconst getRows = (courses) => courses.sort((a, b) => {\r\n  let ret = 0;\r\n  if (a.university > b.university) ret = -1;\r\n  else if (a.university < b.university) ret = 1;\r\n  else if (a.number > b.number) ret = 1;\r\n  else if (a.number < b.number) ret = -1;\r\n  return ret;\r\n}).map((course, idx) => (\r\n  <Course\r\n    data={course}\r\n    key={course.title}\r\n    last={idx === courses.length - 1}\r\n  />\r\n));\r\n\r\nconst Courses = ({ data }) => (\r\n  <div className=\"courses\">\r\n    <div className=\"link-to\" id=\"courses\" />\r\n    <div className=\"title\">\r\n      <h3>Selected Courses</h3>\r\n    </div>\r\n    <ul className=\"course-list\">\r\n      {getRows(data)}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nCourses.propTypes = {\r\n  data: PropTypes.arrayOf(PropTypes.shape({\r\n    title: PropTypes.string,\r\n    number: PropTypes.string,\r\n    link: PropTypes.string,\r\n    university: PropTypes.string,\r\n  })),\r\n};\r\n\r\nCourses.defaultProps = {\r\n  data: [],\r\n};\r\n\r\nexport default Courses;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst References = () => (\r\n  <div className=\"references\">\r\n    <div className=\"link-to\" id=\"references\" />\r\n    <div className=\"title\">\r\n      <Link to=\"/contact\">\r\n        <h3>References are available upon request</h3>\r\n      </Link>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default References;\r\n","const courses = [\r\n  {\r\n    title: 'Operating Systems Principles',\r\n    number: 'CSC 501',\r\n    link: 'https://www.engineeringonline.ncsu.edu/course/csc-501-operating-systems-principles-2/',\r\n    university: 'NC State',\r\n  },\r\n  {\r\n    title: 'Design and Analysis of Algorithms',\r\n    number: 'CSC 505',\r\n    link: 'https://www.engineeringonline.ncsu.edu/course/csc-505-design-and-analysis-of-algorithms/',\r\n    university: 'NC State',\r\n  },\r\n  {\r\n    title: 'Advanced Topics In Computer Science: Linux Networking',\r\n    number: 'CSC 791-038',\r\n    link: 'https://www.engineeringonline.ncsu.edu/course/',\r\n    university: 'NC State',\r\n  },\r\n  {\r\n    title: 'Cloud Computing Technology',\r\n    number: 'ECE 547',\r\n    link: 'https://www.engineeringonline.ncsu.edu/course/ece-547-cloud-computing-technology/',\r\n    university: 'NC State',\r\n  },\r\n  {\r\n    title: 'Software Engineering',\r\n    number: 'CSC 510',\r\n    link: 'https://www.engineeringonline.ncsu.edu/course/csc-510-software-engineering/',\r\n    university: 'NC State',\r\n  },\r\n];\r\n\r\nexport default courses;\r\n","const degrees = [\r\n  {\r\n    school: 'North Carolina State University',\r\n    degree: 'M.S. Computer Science',\r\n    link: 'https://www.ncsu.edu/',\r\n    year: 2024,\r\n  },\r\n  {\r\n    school: 'Gokaraju Rangaraju Institute of Engineering and Technology',\r\n    degree: 'B.S. Computer Science',\r\n    link: 'https://www.griet.ac.in/',\r\n    year: 2020,\r\n  },\r\n];\r\n\r\nexport default degrees;\r\n","/**\r\n * @typedef {Object} Position\r\n * Conforms to https://jsonresume.org/schema/\r\n *\r\n * @property {string} name - Name of the company\r\n * @property {string} position - Position title\r\n * @property {string} url - Company website\r\n * @property {string} startDate - Start date of the position in YYYY-MM-DD format\r\n * @property {string|undefined} endDate - End date of the position in YYYY-MM-DD format.\r\n * If undefined, the position is still active.\r\n * @property {string|undefined} summary - html/markdown summary of the position\r\n * @property {string[]} highlights - plain text highlights of the position (bulleted list)\r\n */\r\nconst work = [\r\n  {\r\n    name: 'Arrcus, Inc.',\r\n    position: 'Network Software Engineering Intern',\r\n    url: 'https://arrcus.com/',\r\n    startDate: '2022-06-05',\r\n    endDate: '2022-08-18',\r\n    summary: `Arrcus is a multi-cloud networking software. The company offers ArcOS, a network operating system that allows teams to scale up their network, and\r\n              ArcIQ, a network visibility and analytics platform that provides networking professionals with real-time, deep views of the networks and devices\r\n              with insights for incident management and troubleshooting.`,\r\n    highlights: [\r\n      'Involved in building ArcOS - An OS for network infrastructure in Data Center, Cloud, and 5G.\\n',\r\n      `Extended ”show BGP neighbor” command to incorporate dynamic BGP peers by implementing Operational Data Store \r\n       in ConfD and implemented show command for EVPN-VPWS tunnel configurations using YANG, ConfD and C.`,\r\n      `Designed and implemented process monitoring tool to analyze resource utilization using pidfd open, eBPF, LTTng.\r\n        Metrics referred file descriptors, memory usage, power consumption, and thread counts, enabling efficient resource\r\n        management and rapid troubleshooting using gdb.`,\r\n    ],\r\n  },\r\n  {\r\n    name: 'West Agile Labs (now Veltris)',\r\n    position: 'Associate Software Development Engineer',\r\n    url: 'https://www.veltris.com/',\r\n    startDate: '2020-01-07',\r\n    endDate: '2022-04-30',\r\n    summary: `West Agile Labs is a Digital Product Agency based in San Francisco, offering design,\r\n               development and consulting services to both startups and enterprises. I Worked for building software for <a href=\"https://www.trycents.com/\">Cents</a>,\r\n              The most integrated laundry and dry cleaning business management system in the industry.`,\r\n    highlights: [\r\n      `Fullstack developer for TryCents Software: Designed and developed a robust application using agile methodology and \r\n       followed test-driven development to handle over a million users.`,\r\n      `Designed UI components using Figma and implemented frontend using ReactJs, React-Native and Redux\r\n      frameworks. Implemented Class and Functional Components along with lazy loading.`,\r\n      `Refactored legacy code to ES6 and optimized the search queries, significantly minimizing the average response time.\r\n      Implemented backend services using NodeJs, ObjectionJs & Sequelize frameworks, and ElasticSearch following\r\n      pipeline pattern approach.`,\r\n      `Integrated with the APIs of market-leading third-party applications like Twilio, Doordash, Uber, Stripe, and Google to\r\n      implement the delivery functionality.`,\r\n    ],\r\n  },\r\n  {\r\n    name: 'Neiman Marcus',\r\n    position: 'Freelance Developer',\r\n    url: 'https://www.neimanmarcus.com/',\r\n    startDate: '2021-09-01',\r\n    endDate: '2022-07-30',\r\n    summary: `Neiman Marcus Group, Inc. is an American integrated luxury retailer headquartered in Dallas,\r\n              Texas, which owns Neiman Marcus, Bergdorf Goodman, Horchow, and Last Call. I worked for Neiman Marcus through <a href=\"https://www.gbitinc.com/\"> GBIT </a>`,\r\n    highlights: [\r\n      'Leveraged serverless architecture, including several AWS services with deployment through Jenkins & Terraform',\r\n      `This infrastructure supported the processing of 3 million records in a single instance and employed Glue and Lambda\r\n      jobs to harness Apache Spark for high-speed data processing.`,\r\n    ],\r\n  },\r\n];\r\n\r\nexport default work;\r\n","const skills = [\r\n  {\r\n    title: 'Javascript',\r\n    competency: 4,\r\n    category: ['Web Development', 'Languages', 'Javascript'],\r\n  },\r\n  {\r\n    title: 'Node.JS',\r\n    competency: 5,\r\n    category: ['Web Development', 'Javascript'],\r\n  },\r\n  {\r\n    title: 'React',\r\n    competency: 2,\r\n    category: ['Web Development', 'Javascript'],\r\n  },\r\n  {\r\n    title: 'Bash',\r\n    competency: 2,\r\n    category: ['Tools', 'Languages'],\r\n  },\r\n  {\r\n    title: 'Amazon Web Services',\r\n    competency: 4,\r\n    category: ['Web Development', 'Tools'],\r\n  },\r\n  {\r\n    title: 'MongoDB',\r\n    competency: 3,\r\n    category: ['Web Development', 'Databases'],\r\n  },\r\n  {\r\n    title: 'ElasticSearch',\r\n    competency: 2,\r\n    category: ['Web Development', 'Databases'],\r\n  },\r\n  {\r\n    title: 'PostgreSQL/SQLite3/SQL/Redshift',\r\n    competency: 4,\r\n    category: ['Web Development', 'Databases', 'Languages'],\r\n  },\r\n  {\r\n    title: 'Redis',\r\n    competency: 3,\r\n    category: ['Web Development', 'Databases'],\r\n  },\r\n  {\r\n    title: 'Data Mining',\r\n    competency: 3,\r\n    category: ['ML Engineering'],\r\n  },\r\n  {\r\n    title: 'Express.JS',\r\n    competency: 2,\r\n    category: ['Web Development', 'Javascript'],\r\n  },\r\n  {\r\n    title: 'Flask',\r\n    competency: 3,\r\n    category: ['Web Development', 'Python'],\r\n  },\r\n  {\r\n    title: 'FastAPI',\r\n    competency: 3,\r\n    category: ['Web Development', 'Python'],\r\n  },\r\n  {\r\n    title: 'Git/Mercurial',\r\n    competency: 3,\r\n    category: ['Tools'],\r\n  },\r\n  {\r\n    title: 'Kubernetes',\r\n    competency: 2,\r\n    category: ['Tools', 'Data Engineering'],\r\n  },\r\n  {\r\n    title: 'AWS',\r\n    competency: 3,\r\n    category: ['Tools', 'Web Development'],\r\n  },\r\n  {\r\n    title: 'Docker',\r\n    competency: 3,\r\n    category: ['Tools', 'Data Engineering'],\r\n  },\r\n  {\r\n    title: 'AWS Lambda',\r\n    competency: 3,\r\n    category: ['Tools', 'Web Development'],\r\n  },\r\n  {\r\n    title: 'Numpy',\r\n    competency: 3,\r\n    category: ['Data Science', 'Data Engineering', 'Python', 'ML Engineering'],\r\n  },\r\n  {\r\n    title: 'Tensorflow + Keras',\r\n    competency: 3,\r\n    category: ['ML Engineering', 'Python'],\r\n  },\r\n  {\r\n    title: 'Jupyter',\r\n    competency: 3,\r\n    category: ['Data Science', 'Python'],\r\n  },\r\n  {\r\n    title: 'Typescript',\r\n    competency: 3,\r\n    category: ['Web Development', 'Languages', 'Javascript'],\r\n  },\r\n  {\r\n    title: 'HTML + SASS/SCSS/CSS',\r\n    competency: 3,\r\n    category: ['Web Development', 'Languages'],\r\n  },\r\n  {\r\n    title: 'Python',\r\n    competency: 5,\r\n    category: ['Languages', 'Python', 'ML Engineering'],\r\n  },\r\n  {\r\n    title: 'Ruby',\r\n    competency: 2,\r\n    category: ['Languages'],\r\n  },\r\n  {\r\n    title: 'Ruby on Rails',\r\n    competency: 3,\r\n    category: ['Web Development', 'Languages'],\r\n  },\r\n  {\r\n    title: 'C/C++',\r\n    competency: 4,\r\n    category: ['Languages'],\r\n  },\r\n].map((skill) => ({ ...skill, category: skill.category.sort() }));\r\n\r\n// this is a list of colors that I like. The length should be === to the\r\n// number of categories. Re-arrange this list until you find a pattern you like.\r\nconst colors = [\r\n  '#6968b3',\r\n  '#37b1f5',\r\n  '#40494e',\r\n  '#515dd4',\r\n  '#e47272',\r\n  '#cc7b94',\r\n  '#3896e2',\r\n  '#c3423f',\r\n  '#d75858',\r\n  '#747fff',\r\n  '#64cb7b',\r\n];\r\n\r\nconst categories = [\r\n  ...new Set(skills.flatMap(({ category }) => category)),\r\n].sort().map((category, index) => ({\r\n  name: category,\r\n  color: colors[index],\r\n}));\r\n\r\nexport { categories, skills };\r\n","/* eslint-disable import/no-extraneous-dependencies */\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { faFileArrowDown } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Main from '../layouts/Main';\r\n\r\nimport Education from '../components/Resume/Education';\r\nimport Experience from '../components/Resume/Experience';\r\nimport Skills from '../components/Resume/Skills';\r\nimport Courses from '../components/Resume/Courses';\r\nimport References from '../components/Resume/References';\r\n\r\nimport courses from '../data/resume/courses';\r\nimport degrees from '../data/resume/degrees';\r\nimport work from '../data/resume/work';\r\nimport { skills, categories } from '../data/resume/skills';\r\n\r\n// NOTE: sections are displayed in order defined.\r\nconst sections = {\r\n  Education: () => <Education data={degrees} />,\r\n  Experience: () => <Experience data={work} />,\r\n  Skills: () => <Skills skills={skills} categories={categories} />,\r\n  Courses: () => <Courses data={courses} />,\r\n  References: () => <References />,\r\n};\r\n\r\nconst Resume = () => (\r\n  <Main\r\n    title=\"Resume\"\r\n    description=\"Nagaraj Madamshetti's Resume.\"\r\n  >\r\n    <article className=\"post\" id=\"resume\">\r\n      <header>\r\n        <div className=\"title\">\r\n          <div style={{ display: 'flex', alignItems: 'center' }}>\r\n            <h2 style={{ margin: '0' }}>\r\n              <Link to=\"/resume\">Resume</Link>\r\n            </h2>\r\n            <h1 style={{ margin: '0', marginLeft: '10px' }}>\r\n              <Link to=\"/data/nagaraj_madamshetti.pdf\" target=\"_blank\" download>\r\n                <FontAwesomeIcon icon={faFileArrowDown} />\r\n              </Link>\r\n            </h1>\r\n          </div>\r\n          <div className=\"link-container\">\r\n            {Object.keys(sections).map((sec) => (\r\n              <h4 key={sec}>\r\n                <a href={`#${sec.toLowerCase()}`}>{sec}</a>\r\n              </h4>))}\r\n          </div>\r\n        </div>\r\n      </header>\r\n      {Object.entries(sections).map(([name, Section]) => (\r\n        <Section key={name} />\r\n      ))}\r\n    </article>\r\n  </Main>\r\n);\r\n\r\nexport default Resume;\r\n"],"names":["_ref","data","_jsx","className","children","_jsxs","degree","href","link","school","year","Education","id","map","Degree","defaultProps","_ref$data","name","position","url","startDate","endDate","summary","highlights","dayjs","format","Markdown","options","overrides","p","props","highlight","Experience","job","Job","concat","handleClick","active","label","type","onClick","SkillBar","categories","category","competency","title","titleStyle","background","filter","cat","includes","color","barStyle","_objectSpread","width","String","Math","min","max","style","Skills","skills","initialButtons","Object","fromEntries","_ref2","_useState","useState","_useState2","_slicedToArray","buttons","setButtons","handleChildClick","newButtons","keys","reduce","obj","key","_defineProperty","All","some","CategoryButton","actCat","sort","a","b","ret","skill","getRows","Course","last","number","courses","university","course","idx","length","Courses","Link","to","colors","_toConsumableArray","Set","flatMap","index","sections","_Education","degrees","_Experience","work","_Skills","_Courses","References","_References","Main","description","display","alignItems","margin","marginLeft","target","download","FontAwesomeIcon","icon","faFileArrowDown","sec","toLowerCase","entries","Section"],"sourceRoot":""}